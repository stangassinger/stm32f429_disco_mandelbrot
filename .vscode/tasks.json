{
    // Defines the Visual Studio Code Tasks for building and debugging.
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            //  Connect to stm32f429-disco via OpenOCD, to be used for debugging.
            "label": "Connect To stm32f429-disco",
            "type": "shell",
            "windows": {
                "command": "c:\\openocd\\bin\\openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg",
            },
            "linux": {
                "command": "openocd -f interface/stlink-v2-1.cfg -f discovery.cfg",
            },
            "problemMatcher": []
        },
        {
            //  Build the Rust main program. This is the default task for "Run Build Task".
            //  The compiled main program will be located at "stm32-blue-pill-rust/target/thumbv7m-none-eabi/release/stm32-blue-pill-rust"
            "label": "Build (STM32  Rust)",
            "type": "shell",
            "command": "cargo build --release",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            //  Remove all compiled files, including compiled examples.
            "label": "Remove Build (STM32 Rust)",
            "type": "shell",
            "command": "cargo clean",
            "problemMatcher": []
        },
        {
            //  Check that the main program and its dependencies are valid.
            "label": "✔️ Check Build (STM32 Rust)",
            "type": "shell",
            "command": "cargo check --release",
            "problemMatcher": []
        },
        {
            "label": "Build Example (STM32 Rust)",
            "type": "shell",
            "windows": {
                "command": "copy Cargo.toml Cargo.test; cargo build --release --example ${fileBasenameNoExtension}",
            },
            "linux": {
                "command": "cp Cargo.toml Cargo.test; cargo build --release --example ${fileBasenameNoExtension}",
            },
            "problemMatcher": []
        },
        {
            //  Check that the example code and dependencies are valid. The active window must be the example source file.
            "label": "✔️ Check Example (STM32Rust)",
            "type": "shell",
            "command": "cargo check -vv --release --example ${fileBasenameNoExtension}",
            "problemMatcher": []
        },
        {
            //  Expand the Rust macros for the example code but do not build. Used for troubleshooting the macros. The active window must be the example source file.
            "label": "Expand Example (STM32 Rust)",
            "type": "shell",
            "command": "cargo rustc -vv --release --example ${fileBasenameNoExtension} --profile=check -- -Zunstable-options --pretty=expanded",
            "problemMatcher": []
        },
    ]
}
